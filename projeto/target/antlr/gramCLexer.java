// Generated from gramC.g4 by ANTLR 4.4
package antlr;

        import java.util.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class gramCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__42=1, T__41=2, T__40=3, T__39=4, T__38=5, T__37=6, T__36=7, T__35=8, 
		T__34=9, T__33=10, T__32=11, T__31=12, T__30=13, T__29=14, T__28=15, T__27=16, 
		T__26=17, T__25=18, T__24=19, T__23=20, T__22=21, T__21=22, T__20=23, 
		T__19=24, T__18=25, T__17=26, T__16=27, T__15=28, T__14=29, T__13=30, 
		T__12=31, T__11=32, T__10=33, T__9=34, T__8=35, T__7=36, T__6=37, T__5=38, 
		T__4=39, T__3=40, T__2=41, T__1=42, T__0=43, CHAR=44, FLOAT=45, SufixoFloat=46, 
		INT=47, ID=48, WS=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'"
	};
	public static final String[] ruleNames = {
		"T__42", "T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", 
		"T__34", "T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", 
		"T__26", "T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", 
		"T__18", "T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", 
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "CHAR", "DIGITO", "FLOAT", "SufixoFloat", "INT", "ID", 
		"LETRA", "WS"
	};


	    HashMap<String,Integer> linesFunc = new HashMap<String,Integer>();
	    int linesAux;
	    
	    HashMap<String,Integer> argsFunc = new HashMap<String,Integer>();
	    int argsAux;


	public gramCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "gramC.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u0143\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3"+
		"\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3"+
		"\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3"+
		"\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3"+
		"\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\37\3"+
		"\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3"+
		"$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3+\3,\3,"+
		"\3-\3-\3-\3-\5-\u0100\n-\3-\3-\3.\6.\u0105\n.\r.\16.\u0106\3/\6/\u010a"+
		"\n/\r/\16/\u010b\3/\3/\7/\u0110\n/\f/\16/\u0113\13/\3/\5/\u0116\n/\3/"+
		"\3/\6/\u011a\n/\r/\16/\u011b\3/\5/\u011f\n/\3/\3/\3/\5/\u0124\n/\3\60"+
		"\3\60\3\60\3\60\5\60\u012a\n\60\3\61\3\61\3\61\7\61\u012f\n\61\f\61\16"+
		"\61\u0132\13\61\5\61\u0134\n\61\3\62\3\62\3\62\7\62\u0139\n\62\f\62\16"+
		"\62\u013c\13\62\3\63\3\63\3\64\3\64\3\64\3\64\2\2\65\3\3\5\4\7\5\t\6\13"+
		"\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'"+
		"\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'"+
		"M(O)Q*S+U,W-Y.[\2]/_\60a\61c\62e\2g\63\3\2\6\n\2$$))^^ddhhppttvv\4\2)"+
		")^^\5\2C\\aac|\5\2\13\f\16\17\"\"\u014e\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3"+
		"\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2"+
		"\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35"+
		"\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)"+
		"\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2"+
		"\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2"+
		"A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3"+
		"\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2"+
		"\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2g\3\2\2\2\3i\3\2\2\2\5"+
		"l\3\2\2\2\7r\3\2\2\2\tt\3\2\2\2\13z\3\2\2\2\r|\3\2\2\2\17~\3\2\2\2\21"+
		"\u0080\3\2\2\2\23\u0082\3\2\2\2\25\u0085\3\2\2\2\27\u0089\3\2\2\2\31\u008b"+
		"\3\2\2\2\33\u008e\3\2\2\2\35\u0094\3\2\2\2\37\u0097\3\2\2\2!\u009a\3\2"+
		"\2\2#\u009c\3\2\2\2%\u00a1\3\2\2\2\'\u00a3\3\2\2\2)\u00a6\3\2\2\2+\u00ab"+
		"\3\2\2\2-\u00ad\3\2\2\2/\u00b5\3\2\2\2\61\u00bb\3\2\2\2\63\u00c0\3\2\2"+
		"\2\65\u00c3\3\2\2\2\67\u00c8\3\2\2\29\u00ca\3\2\2\2;\u00cd\3\2\2\2=\u00cf"+
		"\3\2\2\2?\u00d1\3\2\2\2A\u00d7\3\2\2\2C\u00db\3\2\2\2E\u00e2\3\2\2\2G"+
		"\u00e4\3\2\2\2I\u00e6\3\2\2\2K\u00e9\3\2\2\2M\u00ec\3\2\2\2O\u00ee\3\2"+
		"\2\2Q\u00f1\3\2\2\2S\u00f4\3\2\2\2U\u00f6\3\2\2\2W\u00f9\3\2\2\2Y\u00fb"+
		"\3\2\2\2[\u0104\3\2\2\2]\u0123\3\2\2\2_\u0129\3\2\2\2a\u0133\3\2\2\2c"+
		"\u0135\3\2\2\2e\u013d\3\2\2\2g\u013f\3\2\2\2ij\7/\2\2jk\7?\2\2k\4\3\2"+
		"\2\2lm\7k\2\2mn\7p\2\2no\7r\2\2op\7w\2\2pq\7v\2\2q\6\3\2\2\2rs\7.\2\2"+
		"s\b\3\2\2\2tu\7y\2\2uv\7j\2\2vw\7k\2\2wx\7n\2\2xy\7g\2\2y\n\3\2\2\2z{"+
		"\7/\2\2{\f\3\2\2\2|}\7,\2\2}\16\3\2\2\2~\177\7<\2\2\177\20\3\2\2\2\u0080"+
		"\u0081\7*\2\2\u0081\22\3\2\2\2\u0082\u0083\7k\2\2\u0083\u0084\7h\2\2\u0084"+
		"\24\3\2\2\2\u0085\u0086\7k\2\2\u0086\u0087\7p\2\2\u0087\u0088\7v\2\2\u0088"+
		"\26\3\2\2\2\u0089\u008a\7>\2\2\u008a\30\3\2\2\2\u008b\u008c\7/\2\2\u008c"+
		"\u008d\7/\2\2\u008d\32\3\2\2\2\u008e\u008f\7h\2\2\u008f\u0090\7c\2\2\u0090"+
		"\u0091\7n\2\2\u0091\u0092\7u\2\2\u0092\u0093\7g\2\2\u0093\34\3\2\2\2\u0094"+
		"\u0095\7#\2\2\u0095\u0096\7?\2\2\u0096\36\3\2\2\2\u0097\u0098\7>\2\2\u0098"+
		"\u0099\7?\2\2\u0099 \3\2\2\2\u009a\u009b\7A\2\2\u009b\"\3\2\2\2\u009c"+
		"\u009d\7x\2\2\u009d\u009e\7q\2\2\u009e\u009f\7k\2\2\u009f\u00a0\7f\2\2"+
		"\u00a0$\3\2\2\2\u00a1\u00a2\7}\2\2\u00a2&\3\2\2\2\u00a3\u00a4\7-\2\2\u00a4"+
		"\u00a5\7?\2\2\u00a5(\3\2\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7n\2\2\u00a8"+
		"\u00a9\7u\2\2\u00a9\u00aa\7g\2\2\u00aa*\3\2\2\2\u00ab\u00ac\7\177\2\2"+
		"\u00ac,\3\2\2\2\u00ad\u00ae\7d\2\2\u00ae\u00af\7q\2\2\u00af\u00b0\7q\2"+
		"\2\u00b0\u00b1\7n\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4"+
		"\7p\2\2\u00b4.\3\2\2\2\u00b5\u00b6\7h\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8"+
		"\7q\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7v\2\2\u00ba\60\3\2\2\2\u00bb\u00bc"+
		"\7v\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be\7w\2\2\u00be\u00bf\7g\2\2\u00bf"+
		"\62\3\2\2\2\u00c0\u00c1\7-\2\2\u00c1\u00c2\7-\2\2\u00c2\64\3\2\2\2\u00c3"+
		"\u00c4\7e\2\2\u00c4\u00c5\7j\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7t\2\2"+
		"\u00c7\66\3\2\2\2\u00c8\u00c9\7\'\2\2\u00c98\3\2\2\2\u00ca\u00cb\7,\2"+
		"\2\u00cb\u00cc\7?\2\2\u00cc:\3\2\2\2\u00cd\u00ce\7+\2\2\u00ce<\3\2\2\2"+
		"\u00cf\u00d0\7-\2\2\u00d0>\3\2\2\2\u00d1\u00d2\7r\2\2\u00d2\u00d3\7t\2"+
		"\2\u00d3\u00d4\7k\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6\7v\2\2\u00d6@\3\2"+
		"\2\2\u00d7\u00d8\7h\2\2\u00d8\u00d9\7q\2\2\u00d9\u00da\7t\2\2\u00daB\3"+
		"\2\2\2\u00db\u00dc\7t\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7v\2\2\u00de"+
		"\u00df\7w\2\2\u00df\u00e0\7t\2\2\u00e0\u00e1\7p\2\2\u00e1D\3\2\2\2\u00e2"+
		"\u00e3\7?\2\2\u00e3F\3\2\2\2\u00e4\u00e5\7=\2\2\u00e5H\3\2\2\2\u00e6\u00e7"+
		"\7(\2\2\u00e7\u00e8\7(\2\2\u00e8J\3\2\2\2\u00e9\u00ea\7~\2\2\u00ea\u00eb"+
		"\7~\2\2\u00ebL\3\2\2\2\u00ec\u00ed\7@\2\2\u00edN\3\2\2\2\u00ee\u00ef\7"+
		"\61\2\2\u00ef\u00f0\7?\2\2\u00f0P\3\2\2\2\u00f1\u00f2\7?\2\2\u00f2\u00f3"+
		"\7?\2\2\u00f3R\3\2\2\2\u00f4\u00f5\7\61\2\2\u00f5T\3\2\2\2\u00f6\u00f7"+
		"\7@\2\2\u00f7\u00f8\7?\2\2\u00f8V\3\2\2\2\u00f9\u00fa\7#\2\2\u00faX\3"+
		"\2\2\2\u00fb\u00ff\7)\2\2\u00fc\u00fd\7^\2\2\u00fd\u0100\t\2\2\2\u00fe"+
		"\u0100\n\3\2\2\u00ff\u00fc\3\2\2\2\u00ff\u00fe\3\2\2\2\u0100\u0101\3\2"+
		"\2\2\u0101\u0102\7)\2\2\u0102Z\3\2\2\2\u0103\u0105\4\62;\2\u0104\u0103"+
		"\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0104\3\2\2\2\u0106\u0107\3\2\2\2\u0107"+
		"\\\3\2\2\2\u0108\u010a\5[.\2\u0109\u0108\3\2\2\2\u010a\u010b\3\2\2\2\u010b"+
		"\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u0111\7\60"+
		"\2\2\u010e\u0110\5[.\2\u010f\u010e\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f"+
		"\3\2\2\2\u0111\u0112\3\2\2\2\u0112\u0115\3\2\2\2\u0113\u0111\3\2\2\2\u0114"+
		"\u0116\5_\60\2\u0115\u0114\3\2\2\2\u0115\u0116\3\2\2\2\u0116\u0124\3\2"+
		"\2\2\u0117\u0119\7\60\2\2\u0118\u011a\5[.\2\u0119\u0118\3\2\2\2\u011a"+
		"\u011b\3\2\2\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c\u011e\3\2"+
		"\2\2\u011d\u011f\5_\60\2\u011e\u011d\3\2\2\2\u011e\u011f\3\2\2\2\u011f"+
		"\u0124\3\2\2\2\u0120\u0121\5a\61\2\u0121\u0122\5_\60\2\u0122\u0124\3\2"+
		"\2\2\u0123\u0109\3\2\2\2\u0123\u0117\3\2\2\2\u0123\u0120\3\2\2\2\u0124"+
		"^\3\2\2\2\u0125\u0126\7<\2\2\u0126\u012a\7h\2\2\u0127\u0128\7<\2\2\u0128"+
		"\u012a\7H\2\2\u0129\u0125\3\2\2\2\u0129\u0127\3\2\2\2\u012a`\3\2\2\2\u012b"+
		"\u0134\7\62\2\2\u012c\u0130\4\63;\2\u012d\u012f\5[.\2\u012e\u012d\3\2"+
		"\2\2\u012f\u0132\3\2\2\2\u0130\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131"+
		"\u0134\3\2\2\2\u0132\u0130\3\2\2\2\u0133\u012b\3\2\2\2\u0133\u012c\3\2"+
		"\2\2\u0134b\3\2\2\2\u0135\u013a\5e\63\2\u0136\u0139\5e\63\2\u0137\u0139"+
		"\4\62;\2\u0138\u0136\3\2\2\2\u0138\u0137\3\2\2\2\u0139\u013c\3\2\2\2\u013a"+
		"\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013bd\3\2\2\2\u013c\u013a\3\2\2\2"+
		"\u013d\u013e\t\4\2\2\u013ef\3\2\2\2\u013f\u0140\t\5\2\2\u0140\u0141\3"+
		"\2\2\2\u0141\u0142\b\64\2\2\u0142h\3\2\2\2\20\2\u00ff\u0106\u010b\u0111"+
		"\u0115\u011b\u011e\u0123\u0129\u0130\u0133\u0138\u013a\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}